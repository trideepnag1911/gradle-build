# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project and GKE_SA_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke
on:
  push:
    branches:
      - 'main'
  workflow_call:
name: Scans
jobs:
  Scan-Secret:
    name: Scan
    runs-on: self-hosted
    steps:
      - name: Code Checkout
        uses: actions/checkout@v2
      - name: TruffleHog Scan
        uses: trideepnag1911/trufflehog-scan@main
        
      - name: Java-Setup
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Sonarqube Scan with Gradle Build
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        uses: trideepnag1911/gradle-build-with-sonarqube@main

      - name: check metareport
        run: ls -lrt build/sonar/report-task.txt
      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          scanMetadataReportFile: build/sonar/report-task.txt
      - name: Checkmarx Scan
        run: echo "This is a place holder for Checkmarx Scan integration"

